2024-11-27 05:48:09.975   [DBG] Check config path: '/home/stoat/Documents/TradingView/configs/config.json'
2024-11-27 05:48:09.975   [DBG] Check config path: '/nix/store/vrbz5i134m2761bsfkwb3hrfklza4bd6-tradingview-2.7.2/share/tradingview/resources/app.asar/configs/config.json'
2024-11-27 05:48:09.975   [INF] Use config path: '/nix/store/vrbz5i134m2761bsfkwb3hrfklza4bd6-tradingview-2.7.2/share/tradingview/resources/app.asar/configs/config.json'
2024-11-27 05:48:09.976   [DBG] Configuration.updateConfigFromEnvironment(): "TVD_DEBUGMODE: false"
2024-11-27 05:48:09.976   [DBG] Configuration.updateConfigFromEnvironment(): "TVD_LOG_VIEW_ENABLED: false"
2024-11-27 05:48:10.209   [DBG] Initializing UserService
2024-11-27 05:48:10.209   [INF] Initializing AppEventsService
2024-11-27 05:48:10.213   [DBG] Initializing AuthenticationHandler
2024-11-27 05:48:10.215   [DBG] Logger initialized
2024-11-27 05:48:10.216   [DBG] Initializing MainService
2024-11-27 05:48:10.216   [DBG] MainService.subscribeAppEvents()
2024-11-27 05:48:10.217   [DBG] Initializing LocaleService
2024-11-27 05:48:10.218   [INF] Main service created. appPath: '/nix/store/vrbz5i134m2761bsfkwb3hrfklza4bd6-tradingview-2.7.2/share/tradingview/resources/app.asar', documentsPath: '/home/stoat/Documents/TradingView' 
2024-11-27 05:48:10.218   [DBG] Initializing PersistenceService
2024-11-27 05:48:10.219   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:10.223   [DBG] Initializing WindowService
2024-11-27 05:48:10.227   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:10.228   [DBG] Initializing ThemeManager service
2024-11-27 05:48:10.228   [DBG] mn.setPlatformTheme()
2024-11-27 05:48:10.248   [DBG] WindowService.getChartWindows()
2024-11-27 05:48:10.250   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:10.253   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:10.254   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:10.255   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:10.255   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:10.255   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:10.280   [DBG] Initializing SettingsProvider
2024-11-27 05:48:10.281   [DBG] PasswordManagerService.getShouldSaveCredentials()
2024-11-27 05:48:10.281   [DBG] PasswordManagerService.setShouldSaveCredentials()
2024-11-27 05:48:10.282   [DBG] AppEventsService.doStartup()
2024-11-27 05:48:10.282   [DBG] AppEventsService.checkFirstRun()
2024-11-27 05:48:10.283   [DBG] Initializing TrackEventService
2024-11-27 05:48:10.283   [DBG] TrackEventService.updateAppTrackingStatus()
2024-11-27 05:48:10.284   [DBG] mn.availableThemes()
2024-11-27 05:48:10.284   [DBG] mn.availableThemes()
2024-11-27 05:48:10.284   [DBG] mn.availableThemes()
2024-11-27 05:48:10.284   [DBG] mn.availableThemes()
2024-11-27 05:48:10.350   [DBG] AppEventsService.initSession()
2024-11-27 05:48:10.351   [DBG] mn.setPlatformTheme()
2024-11-27 05:48:10.352   [DBG] UserService.Startup()
2024-11-27 05:48:10.354   [DBG] [5:48:10]: 'Startup ' (137) ms
2024-11-27 05:48:10.354   [INF] App version: 2.7.2
2024-11-27 05:48:10.354   [INF] Show Splash Window
2024-11-27 05:48:10.390   [DBG] MainService.registerOsTasks()
2024-11-27 05:48:10.390   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:10.392   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:10.392   [DBG] TrackEventService().Startup()
2024-11-27 05:48:10.392   [DBG] AppEventsService.getCid()
2024-11-27 05:48:10.392   [DBG] MainService.getVersionInfo()
2024-11-27 05:48:10.394   [DBG] mn.availableThemes()
2024-11-27 05:48:10.408   [DBG] PermissionsHandler.initialize()
2024-11-27 05:48:10.768   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:48:10.769   [DBG] MainService.getVersionInfo()
2024-11-27 05:48:10.869   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:48:11.56    [INF] Will sign in user: 'uSs3ewa', id: '89265016'
2024-11-27 05:48:11.602   [INF] Locale info. locale: 'en', host: 'https://www.tradingview.com/'
2024-11-27 05:48:11.603   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:11.605   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:11.607   [DBG] mn.availableThemes()
2024-11-27 05:48:11.609   [DBG] UserService.notifyUserSignedIn()
2024-11-27 05:48:11.610   [DBG] PersistenceService.checkUserStorageExistence()
2024-11-27 05:48:11.611   [INF] Restore user app state from '/home/stoat/.config/TradingView/TVUserStorage/id-89265016/settings.json'
2024-11-27 05:48:11.611   [DBG] PersistenceService.restore()
2024-11-27 05:48:11.611   [DBG] FileBasedStorage.restore()
2024-11-27 05:48:11.612   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:11.613   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:11.614   [DBG] TrackEventService.setUserData()
2024-11-27 05:48:11.614   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 05:48:11.614   [DBG] LinkingService.internalExtractState()
2024-11-27 05:48:11.614   [DBG] TrackEventService.setAppWindowsData()
2024-11-27 05:48:11.615   [DBG] WindowService.mergeAnonymousSession()
2024-11-27 05:48:11.615   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:11.616   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:11.616   [DBG] mn.availableThemes()
2024-11-27 05:48:11.618   [DBG] WindowService.newWindow()
2024-11-27 05:48:11.618   [DBG] featureRequester(): "Feature access granted"
2024-11-27 05:48:11.618   [DBG] Will create empty window
2024-11-27 05:48:11.637   [DBG] BaseWindow.addDisposable()
2024-11-27 05:48:11.637   [DBG] BaseWindow.applyWindowTheme()
2024-11-27 05:48:11.637   [DBG] mn.applyTheme()
2024-11-27 05:48:11.637   [DBG] BaseWindow.addDisposable()
2024-11-27 05:48:11.638   [INF] Created base window, tweaking current window
2024-11-27 05:48:11.639   [DBG] [23f78f20] BaseWindow.addDisposable()
2024-11-27 05:48:11.639   [DBG] [23f78f20] BaseWindow.addDisposable()
2024-11-27 05:48:11.693   [DBG] mn.availableThemes()
2024-11-27 05:48:11.693   [DBG] [5:48:11]-[5:48:11]: 'Restore user session' (83) ms
2024-11-27 05:48:11.693   [DBG] TrackEventService.trackStartApp()
2024-11-27 05:48:11.698   [DBG] [23f78f20] TabbedWindowBase.addTab()
2024-11-27 05:48:11.699   [DBG] [23f78f20] BaseWindow.load()
2024-11-27 05:48:11.725   [DBG] [23f78f20] BaseWindow.createAppAwaiter()
2024-11-27 05:48:11.731   [DBG] s.notifyListeners()
2024-11-27 05:48:11.731   [DBG] PasswordManagerService.getShouldSaveCredentials()
2024-11-27 05:48:11.732   [DBG] PasswordManagerService.setShouldSaveCredentials()
2024-11-27 05:48:11.732   [INF] Hide Splash Window
2024-11-27 05:48:11.732   [DBG] AppEventsService.openForwardedUrl()
2024-11-27 05:48:11.733   [DBG] [5:48:11]: 'Session restored' (1517) ms
2024-11-27 05:48:12.90    [DBG] mn.applyTheme()
2024-11-27 05:48:12.106   [DBG] [Renderer] initializeIpcProxyForInstance windowControl id: 23f78f20-tvd:tabbed-window-control; Old id undefined
2024-11-27 05:48:12.109   [DBG] [5:48:11]-[5:48:12]: 'BaseWindow: loading window page, url: '/app/window/index.html'' (409) ms
2024-11-27 05:48:12.138   [DBG] [23f78f20] TabbedWindowBase.getWindowStateAsync()
2024-11-27 05:48:12.152   [DBG] App.componentDidMount()
2024-11-27 05:48:12.153   [DBG] App.tokyoNightInitialize()
2024-11-27 05:48:12.153   [DBG] App.setParentId()
2024-11-27 05:48:12.153   [DBG] [Renderer] initializeIpcProxyForInstance windowControl id: 23f78f20-tvd:tabbed-window-control; Old id undefined
2024-11-27 05:48:12.155   [DBG] App.setParentId(): "Registered window id: l"
2024-11-27 05:48:12.155   [DBG] <App>.componentDidMount(): "Will update window state: 3"
2024-11-27 05:48:12.157   [INF] Window finished load id: '23f78f20'
2024-11-27 05:48:12.158   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:12.158   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:12.158   [DBG] [23f78f20] BaseWindow.show()
2024-11-27 05:48:12.159   [INF] Window page loaded, url: '/app/window/index.html'
2024-11-27 05:48:12.160   [DBG] Check config path: '/home/stoat/Documents/TradingView/configs/nav-rules.json'
2024-11-27 05:48:12.160   [DBG] Check config path: '/nix/store/vrbz5i134m2761bsfkwb3hrfklza4bd6-tradingview-2.7.2/share/tradingview/resources/app.asar/configs/nav-rules.json'
2024-11-27 05:48:12.160   [INF] Use config path: '/nix/store/vrbz5i134m2761bsfkwb3hrfklza4bd6-tradingview-2.7.2/share/tradingview/resources/app.asar/configs/nav-rules.json'
2024-11-27 05:48:12.164   [DBG] TabbedWindowBase.findTabById(tabId: 401703e2)
2024-11-27 05:48:12.164   [DBG] TabbedWindowBase.findTabById(tabId: 401703e2)
2024-11-27 05:48:12.165   [DBG] [401703e2] Tab.setupViewEvents()
2024-11-27 05:48:12.166   [INF] Create tab url: '/app/new-tab/index.html', id: '401703e2'
2024-11-27 05:48:12.167   [DBG] [401703e2] TvTab.setupTvViewEvents()
2024-11-27 05:48:12.167   [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 05:48:12.168   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:12.168   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:12.168   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.168   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:48:12.169   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.169   [DBG] [23f78f20] TabbedWindowBase.handleTabLoading()
2024-11-27 05:48:12.170   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.170   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:12.170   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:12.170   [DBG] [401703e2] Tab.load()
2024-11-27 05:48:12.171   [DBG] TaskQueueImpl.startTask()
2024-11-27 05:48:12.171   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.172   [DBG] [401703e2] Tab.setViewData()
2024-11-27 05:48:12.172   [DBG] Tab id: 401703e2, loading url: /app/new-tab/index.html
2024-11-27 05:48:12.190   [DBG] mn.applyTheme()
2024-11-27 05:48:12.193   [DBG] TabPanel.render(): "Tabs panel registered"
2024-11-27 05:48:12.193   [DBG] <App>.componentDidMount(): "App sends ready event"
2024-11-27 05:48:12.212   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:48:12.214   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:48:12.216   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:48:12.218   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:48:12.218   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:48:12.221   [DBG] App.initialize()
2024-11-27 05:48:12.221   [DBG] App.subscribeOnWindowEvents()
2024-11-27 05:48:12.224   [DBG] Initializing TabDragHandler
2024-11-27 05:48:12.225   [DBG] r.createRendererWorkerWindow()
2024-11-27 05:48:12.243   [DBG] BaseWindow.addDisposable()
2024-11-27 05:48:12.243   [DBG] BaseWindow.applyWindowTheme()
2024-11-27 05:48:12.243   [DBG] mn.applyTheme()
2024-11-27 05:48:12.243   [DBG] BaseWindow.addDisposable()
2024-11-27 05:48:12.243   [DBG] BaseWindow.load()
2024-11-27 05:48:12.251   [DBG] BaseWindow.createAppAwaiter()
2024-11-27 05:48:12.252   [DBG] BaseWindow.createAppAwaiter()
2024-11-27 05:48:12.258   [DBG] [23f78f20] TabbedWindowBase.registerTabController()
2024-11-27 05:48:12.259   [INF] TabbedWindowBase.registerTabController(tabId: 401703e2-8297-4444-bd29-5a1ffa70d46b, from window id: 713cdb21-tvd:tab)
2024-11-27 05:48:12.259   [DBG] [713cdb21] Tab.setController()
2024-11-27 05:48:12.261   [DBG] [23f78f20] TabbedWindowBase.registerTabPanel()
2024-11-27 05:48:12.267   [DBG] TabComponent.componentDidMount(): "registered controller for tab 713cdb21"
2024-11-27 05:48:12.286   [DBG] Tab id: 401703e2 did-navigate (/app/new-tab/index.html)
2024-11-27 05:48:12.490   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.490   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:48:12.491   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.491   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:12.506   [DBG] Drag service window finished load
2024-11-27 05:48:12.514   [DBG] [5:48:12]-[5:48:12]: 'BaseWindow: loading window page, url: '/app/renderer-services/drag-service/index.html'' (271) ms
2024-11-27 05:48:12.515   [INF] Window page loaded, url: '/app/renderer-services/drag-service/index.html'
2024-11-27 05:48:12.516   [INF] Creating drag service
2024-11-27 05:48:12.516   [DBG] Native: capture pointer
2024-11-27 05:48:12.518   [DBG] NativeDragService.registerDraggable()
2024-11-27 05:48:12.518   [DBG] NativeDragService.registerDroppable()
2024-11-27 05:48:12.519   [DBG] WindowService.findWindowAsync()
2024-11-27 05:48:12.519   [DBG] WindowService.findWindowAsync()
2024-11-27 05:48:12.519   [DBG] TabComponent.componentDidMount(): "registered draggable with id 713cdb21"
2024-11-27 05:48:12.519   [DBG] TabPanel.componentDidMount(): "Registered droppable with id: 2c122181"
2024-11-27 05:48:12.536   [DBG] [Renderer] initializeIpcProxyForInstance windowControl id: 23f78f20-tvd:tabbed-window-control; Old id undefined
2024-11-27 05:48:14.666   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:48:20.999   [DBG] NewTabService.loadURL()
2024-11-27 05:48:20.999   [DBG] [23f78f20] TabbedWindowBase.replaceTab()
2024-11-27 05:48:21.00    [DBG] [23f78f20] TabbedWindowBase.tabPosition()
2024-11-27 05:48:21.00    [DBG] [23f78f20] TabbedWindowBase.addTab()
2024-11-27 05:48:21.01    [DBG] TabbedWindowBase.findTabById(tabId: 442dfb0f)
2024-11-27 05:48:21.02    [DBG] TabbedWindowBase.findTabById(tabId: 442dfb0f)
2024-11-27 05:48:21.02    [DBG] [442dfb0f] Tab.setupViewEvents()
2024-11-27 05:48:21.02    [INF] Create tab url: 'https://www.tradingview.com/chart/5lF6EbOd/', id: '442dfb0f'
2024-11-27 05:48:21.02    [DBG] [442dfb0f] TvTab.setupTvViewEvents()
2024-11-27 05:48:21.02    [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 05:48:21.02    [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:21.02    [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:21.02    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:21.03    [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.handleTabLoading()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:21.04    [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:21.05    [DBG] [442dfb0f] Tab.load()
2024-11-27 05:48:21.05    [DBG] TaskQueueImpl.startTask()
2024-11-27 05:48:21.05    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:21.05    [DBG] WindowService.prerenderView()
2024-11-27 05:48:21.15    [DBG] [442dfb0f] Tab.setViewData()
2024-11-27 05:48:21.15    [DBG] Tab id: 442dfb0f, loading url: https://www.tradingview.com/chart/5lF6EbOd/
2024-11-27 05:48:21.50    [DBG] [23f78f20] TabbedWindowBase.closeTab()
2024-11-27 05:48:21.52    [INF] Close tab, id: '401703e2', from window id: '23f78f20'
2024-11-27 05:48:21.52    [DBG] [23f78f20] TabbedWindowBase.tabPosition()
2024-11-27 05:48:21.52    [DBG] [713cdb21] Tab.dispose()
2024-11-27 05:48:21.52    [DBG] [713cdb21] Tab.invalidateController()
2024-11-27 05:48:21.52    [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:48:21.52    [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:21.53    [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:48:21.54    [DBG] NativeDragService.unregister(): "Will unregister: 713cdb21"
2024-11-27 05:48:21.55    [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:48:21.62    [DBG] TabComponent.componentWillUnmount(): "Unmounting 713cdb21"
2024-11-27 05:48:21.63    [DBG] [23f78f20] TabbedWindowBase.registerTabController()
2024-11-27 05:48:21.63    [INF] TabbedWindowBase.registerTabController(tabId: 442dfb0f-fef7-45ad-baa9-7d3387421cff, from window id: 3859e50a-tvd:tab)
2024-11-27 05:48:21.63    [DBG] [3859e50a] Tab.setController()
2024-11-27 05:48:21.68    [DBG] Tab id: 401703e2 did-navigate (k)
2024-11-27 05:48:21.68    [DBG] Navigate (about:blank) with NON-OK response code: -1
2024-11-27 05:48:21.69    [DBG] TabComponent.componentDidMount(): "registered controller for tab 3859e50a"
2024-11-27 05:48:21.70    [DBG] NativeDragService.registerDraggable()
2024-11-27 05:48:21.71    [DBG] WindowService.findWindowAsync()
2024-11-27 05:48:21.72    [DBG] TabComponent.componentDidMount(): "registered draggable with id 3859e50a"
2024-11-27 05:48:21.138   [DBG] LinkingService.unlink()
2024-11-27 05:48:21.394   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/chart/5lF6EbOd/)
2024-11-27 05:48:21.443   [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 05:48:22.112   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 05:48:22.112   [DBG] WindowService.zoom()
2024-11-27 05:48:22.112   [DBG] ZoomController.setZoomValue()
2024-11-27 05:48:22.112   [DBG] WindowService.getChartWindows()
2024-11-27 05:48:22.112   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:22.113   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:22.115   [DBG] mn.availableThemes()
2024-11-27 05:48:23.10    [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:48:23.101   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:48:25.56    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:25.56    [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:48:25.58    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:25.58    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:48:33.197   [INF] Invoke key binding [ctrl+Equal]
2024-11-27 05:48:33.197   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.197   [DBG] MainMenuService.hideMenu()
2024-11-27 05:48:33.197   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.197   [DBG] WindowService.zoom()
2024-11-27 05:48:33.197   [DBG] ZoomController.stepZoom()
2024-11-27 05:48:33.197   [DBG] ZoomController.setZoomToView()
2024-11-27 05:48:33.197   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:33.198   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:33.198   [DBG] ZoomController.showZoom()
2024-11-27 05:48:33.198   [DBG] ZoomController.getToastWindow()
2024-11-27 05:48:33.199   [DBG] Initializing ToastWindow id 143ae170-tvd:toast-window
2024-11-27 05:48:33.205   [DBG] mn.applyTheme()
2024-11-27 05:48:33.205   [DBG] ToastWindow.loadToast(toast: a)
2024-11-27 05:48:33.218   [DBG] mn.availableThemes()
2024-11-27 05:48:33.492   [INF] Invoke key binding [ctrl+Equal]
2024-11-27 05:48:33.492   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.492   [DBG] MainMenuService.hideMenu()
2024-11-27 05:48:33.492   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.492   [DBG] WindowService.zoom()
2024-11-27 05:48:33.492   [DBG] ZoomController.stepZoom()
2024-11-27 05:48:33.492   [DBG] ZoomController.setZoomToView()
2024-11-27 05:48:33.493   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:33.495   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:33.495   [DBG] ZoomController.showZoom()
2024-11-27 05:48:33.495   [DBG] ZoomController.getToastWindow()
2024-11-27 05:48:33.496   [DBG] mn.availableThemes()
2024-11-27 05:48:33.497   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:48:33.497   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:48:33.497   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:48:33.597   [DBG] ToastWindow.registerDimensionsCalcView(id: 2d76da91-tvd:toast-view)
2024-11-27 05:48:33.597   [DBG] [Renderer] Toast view id: 2d76da91-tvd:toast-view
2024-11-27 05:48:33.598   [DBG] [Renderer] initializeIpcProxyForInstance toastWindowHandler id: 143ae170-tvd:toast-window; Old id undefined
2024-11-27 05:48:33.618   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:48:33.620   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:48:33.620   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:48:33.620   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:48:33.622   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:48:33.644   [INF] Invoke key binding [ctrl+Equal]
2024-11-27 05:48:33.644   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.644   [DBG] MainMenuService.hideMenu()
2024-11-27 05:48:33.644   [DBG] MenuWindow.hide()
2024-11-27 05:48:33.644   [DBG] WindowService.zoom()
2024-11-27 05:48:33.644   [DBG] ZoomController.stepZoom()
2024-11-27 05:48:33.644   [DBG] ZoomController.setZoomToView()
2024-11-27 05:48:33.645   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:48:33.651   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:48:33.651   [DBG] ZoomController.showZoom()
2024-11-27 05:48:33.651   [DBG] ZoomController.getToastWindow()
2024-11-27 05:48:33.653   [DBG] mn.availableThemes()
2024-11-27 05:48:33.653   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:48:33.653   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:48:33.653   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:48:33.655   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:48:35.659   [DBG] ZoomController.hideZoomPopup()
2024-11-27 05:49:01.71    [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/"
2024-11-27 05:49:01.71    [DBG] BaseNavigationHandler.navigateInPlace(url: https://www.tradingview.com/, tabId: 442dfb0f)
2024-11-27 05:49:01.71    [DBG] TabbedWindowBase.findTabById(tabId: 442dfb0f)
2024-11-27 05:49:01.74    [DBG] [3859e50a] TvTab.checkCanBeUnloaded()
2024-11-27 05:49:01.74    [DBG] [3859e50a] Tab.dispatchBeforeUnloadEvent()
2024-11-27 05:49:01.86    [DBG] [3859e50a] Tab.load()
2024-11-27 05:49:01.87    [DBG] TaskQueueImpl.startTask()
2024-11-27 05:49:01.87    [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:49:01.87    [DBG] WindowService.prerenderView()
2024-11-27 05:49:01.90    [DBG] [3859e50a] Tab.setViewData()
2024-11-27 05:49:01.91    [DBG] Tab id: 442dfb0f, loading url: https://www.tradingview.com/
2024-11-27 05:49:02.40    [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/)
2024-11-27 05:49:02.41    [DBG] [23f78f20] TabbedWindowBase.updateCurrentTabUrl()
2024-11-27 05:49:02.42    [DBG] [2c122181] TabPanel.updateTabUrl()
2024-11-27 05:49:02.87    [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 05:49:03.717   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 05:49:03.717   [DBG] WindowService.zoom()
2024-11-27 05:49:03.717   [DBG] ZoomController.setZoomValue()
2024-11-27 05:49:03.718   [DBG] WindowService.getChartWindows()
2024-11-27 05:49:03.718   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:49:03.718   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:49:03.719   [DBG] mn.availableThemes()
2024-11-27 05:49:05.299   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:05.320   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:05.386   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:05.391   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:05.583   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:05.584   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:49:09.545   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:49:11.447   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:49:13.430   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:49:15.602   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:49:34.821   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:49:34.821   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:49:34.823   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:50:37.596   [INF] Invoke key binding [ctrl+Minus]
2024-11-27 05:50:37.596   [DBG] MenuWindow.hide()
2024-11-27 05:50:37.596   [DBG] MainMenuService.hideMenu()
2024-11-27 05:50:37.596   [DBG] MenuWindow.hide()
2024-11-27 05:50:37.596   [DBG] WindowService.zoom()
2024-11-27 05:50:37.596   [DBG] ZoomController.stepZoom()
2024-11-27 05:50:37.596   [DBG] ZoomController.setZoomToView()
2024-11-27 05:50:37.596   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:50:37.597   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:50:37.597   [DBG] ZoomController.showZoom()
2024-11-27 05:50:37.597   [DBG] ZoomController.getToastWindow()
2024-11-27 05:50:37.598   [DBG] mn.availableThemes()
2024-11-27 05:50:37.598   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:50:37.598   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:50:37.598   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:50:37.599   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:50:39.370   [INF] Invoke key binding [ctrl+Minus]
2024-11-27 05:50:39.370   [DBG] MenuWindow.hide()
2024-11-27 05:50:39.370   [DBG] MainMenuService.hideMenu()
2024-11-27 05:50:39.370   [DBG] MenuWindow.hide()
2024-11-27 05:50:39.370   [DBG] WindowService.zoom()
2024-11-27 05:50:39.370   [DBG] ZoomController.stepZoom()
2024-11-27 05:50:39.370   [DBG] ZoomController.setZoomToView()
2024-11-27 05:50:39.370   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:50:39.370   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:50:39.370   [DBG] ZoomController.showZoom()
2024-11-27 05:50:39.371   [DBG] ZoomController.getToastWindow()
2024-11-27 05:50:39.371   [DBG] mn.availableThemes()
2024-11-27 05:50:39.371   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:50:39.371   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:50:39.371   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:50:39.372   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:50:40.352   [INF] Invoke key binding [ctrl+Minus]
2024-11-27 05:50:40.352   [DBG] MenuWindow.hide()
2024-11-27 05:50:40.352   [DBG] MainMenuService.hideMenu()
2024-11-27 05:50:40.352   [DBG] MenuWindow.hide()
2024-11-27 05:50:40.352   [DBG] WindowService.zoom()
2024-11-27 05:50:40.352   [DBG] ZoomController.stepZoom()
2024-11-27 05:50:40.352   [DBG] ZoomController.setZoomToView()
2024-11-27 05:50:40.353   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:50:40.353   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:50:40.353   [DBG] ZoomController.showZoom()
2024-11-27 05:50:40.353   [DBG] ZoomController.getToastWindow()
2024-11-27 05:50:40.354   [DBG] mn.availableThemes()
2024-11-27 05:50:40.354   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 05:50:40.354   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 05:50:40.354   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 05:50:40.355   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 05:50:42.357   [DBG] ZoomController.hideZoomPopup()
2024-11-27 05:50:43.837   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/u/uSs3ewa/#settings"
2024-11-27 05:50:44.432   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/u/uSs3ewa/#settings)
2024-11-27 05:50:44.432   [DBG] [23f78f20] TabbedWindowBase.updateCurrentTabUrl()
2024-11-27 05:50:44.433   [DBG] [2c122181] TabPanel.updateTabUrl()
2024-11-27 05:50:44.455   [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 05:50:45.06    [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 05:50:45.06    [DBG] WindowService.zoom()
2024-11-27 05:50:45.06    [DBG] ZoomController.setZoomValue()
2024-11-27 05:50:45.06    [DBG] WindowService.getChartWindows()
2024-11-27 05:50:45.06    [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:50:45.07    [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:50:45.07    [DBG] mn.availableThemes()
2024-11-27 05:50:45.417   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:50:45.439   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:50:45.532   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:50:45.532   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:50:45.675   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:50:45.676   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:52.601   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/brokers/"
2024-11-27 05:51:53.267   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/brokers/)
2024-11-27 05:51:53.267   [DBG] [23f78f20] TabbedWindowBase.updateCurrentTabUrl()
2024-11-27 05:51:53.269   [DBG] [2c122181] TabPanel.updateTabUrl()
2024-11-27 05:51:53.304   [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 05:51:53.808   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 05:51:53.809   [DBG] WindowService.zoom()
2024-11-27 05:51:53.809   [DBG] ZoomController.setZoomValue()
2024-11-27 05:51:53.809   [DBG] WindowService.getChartWindows()
2024-11-27 05:51:53.809   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:51:53.810   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:51:53.811   [DBG] mn.availableThemes()
2024-11-27 05:51:54.613   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/support/"
2024-11-27 05:51:54.614   [DBG] BaseNavigationHandler.navigateToNewTab(url: https://www.tradingview.com/support/)
2024-11-27 05:51:54.614   [DBG] [23f78f20] TabbedWindowBase.addTab()
2024-11-27 05:51:54.615   [DBG] TabbedWindowBase.findTabById(tabId: c919dcd9)
2024-11-27 05:51:54.615   [DBG] TabbedWindowBase.findTabById(tabId: c919dcd9)
2024-11-27 05:51:54.616   [DBG] [c919dcd9] Tab.setupViewEvents()
2024-11-27 05:51:54.616   [INF] Create tab url: 'https://www.tradingview.com/support/', id: 'c919dcd9'
2024-11-27 05:51:54.616   [DBG] [c919dcd9] TvTab.setupTvViewEvents()
2024-11-27 05:51:54.616   [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 05:51:54.616   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:51:54.616   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:51:54.616   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:54.617   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:51:54.617   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.handleTabLoading()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:51:54.618   [DBG] [c919dcd9] Tab.load()
2024-11-27 05:51:54.618   [DBG] TaskQueueImpl.startTask()
2024-11-27 05:51:54.618   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:54.618   [DBG] WindowService.prerenderView()
2024-11-27 05:51:54.618   [DBG] [c919dcd9] Tab.setViewData()
2024-11-27 05:51:54.618   [DBG] Tab id: c919dcd9, loading url: https://www.tradingview.com/support/
2024-11-27 05:51:54.633   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:51:54.640   [DBG] [23f78f20] TabbedWindowBase.registerTabController()
2024-11-27 05:51:54.640   [INF] TabbedWindowBase.registerTabController(tabId: c919dcd9-71b8-438f-a46d-81d647c8fd56, from window id: fd6d6712-tvd:tab)
2024-11-27 05:51:54.640   [DBG] [fd6d6712] Tab.setController()
2024-11-27 05:51:54.641   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:51:54.646   [DBG] TabComponent.componentDidMount(): "registered controller for tab fd6d6712"
2024-11-27 05:51:54.648   [DBG] NativeDragService.registerDraggable()
2024-11-27 05:51:54.649   [DBG] WindowService.findWindowAsync()
2024-11-27 05:51:54.652   [DBG] TabComponent.componentDidMount(): "registered draggable with id fd6d6712"
2024-11-27 05:51:54.870   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.106   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.116   [DBG] Tab id: c919dcd9 did-navigate (https://www.tradingview.com/support/)
2024-11-27 05:51:55.121   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.168   [DBG] Tab id: c919dcd9 page-title-updated
2024-11-27 05:51:55.251   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.346   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.348   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:51:55.569   [DBG] Tab id: c919dcd9 dom-ready
2024-11-27 05:51:55.569   [DBG] WindowService.zoom()
2024-11-27 05:51:55.569   [DBG] ZoomController.setZoomValue()
2024-11-27 05:51:55.569   [DBG] WindowService.getChartWindows()
2024-11-27 05:51:55.569   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:51:55.569   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:51:55.570   [DBG] mn.availableThemes()
2024-11-27 05:51:55.760   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:55.761   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:51:55.761   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:55.762   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:58.03    [DBG] [fd6d6712] TabComponent.closeTab()
2024-11-27 05:51:58.25    [DBG] [23f78f20] TabbedWindowBase.closeTab()
2024-11-27 05:51:58.25    [INF] Close tab, id: 'c919dcd9', from window id: '23f78f20'
2024-11-27 05:51:58.25    [DBG] [23f78f20] TabbedWindowBase.tabPosition()
2024-11-27 05:51:58.241   [DBG] [fd6d6712] Tab.dispatchBeforeUnloadEvent()
2024-11-27 05:51:58.243   [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 05:51:58.243   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:51:58.243   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:51:58.243   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:58.244   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 05:51:58.245   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 05:51:58.245   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:51:58.246   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:51:58.247   [DBG] [fd6d6712] Tab.dispose()
2024-11-27 05:51:58.247   [DBG] [fd6d6712] Tab.invalidateController()
2024-11-27 05:51:58.247   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 05:51:58.247   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 05:51:58.247   [DBG] mn.availableThemes()
2024-11-27 05:51:58.249   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:51:58.249   [DBG] NativeDragService.unregister(): "Will unregister: fd6d6712"
2024-11-27 05:51:58.252   [DBG] TabComponent.componentWillUnmount(): "Unmounting fd6d6712"
2024-11-27 05:51:58.253   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 05:51:58.266   [DBG] Tab id: c919dcd9 did-navigate (k)
2024-11-27 05:51:58.266   [DBG] Navigate (about:blank) with NON-OK response code: -1
2024-11-27 05:51:58.284   [DBG] Tab id: c919dcd9 dom-ready
2024-11-27 05:51:58.285   [DBG] LinkingService.unlink()
2024-11-27 05:52:11.255   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/u/uSs3ewa/#billing"
2024-11-27 05:52:11.742   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/u/uSs3ewa/#billing)
2024-11-27 05:52:11.742   [DBG] [23f78f20] TabbedWindowBase.updateCurrentTabUrl()
2024-11-27 05:52:11.744   [DBG] [2c122181] TabPanel.updateTabUrl()
2024-11-27 05:52:11.787   [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 05:52:12.439   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 05:52:12.439   [DBG] WindowService.zoom()
2024-11-27 05:52:12.439   [DBG] ZoomController.setZoomValue()
2024-11-27 05:52:12.439   [DBG] WindowService.getChartWindows()
2024-11-27 05:52:12.439   [DBG] MainMenuService.buildAppMenu()
2024-11-27 05:52:12.440   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 05:52:12.441   [DBG] mn.availableThemes()
2024-11-27 05:52:13.101   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:52:13.149   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:52:13.191   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:52:13.340   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:52:13.431   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:52:13.432   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 05:53:10.208   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 05:53:18.364   [DBG] AppEventsService.focusWebContent()
2024-11-27 05:55:21.306   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 05:55:31.306   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 05:55:41.306   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 05:56:58.248   [DBG] PersistenceService.store()
2024-11-27 05:56:58.248   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 05:56:58.248   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 05:56:58.248   [DBG] [23f78f20] TabbedWindowBase.makeStateSnapshot()
2024-11-27 05:56:58.249   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 05:56:58.249   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 05:56:58.249   [DBG] LinkingService.internalExtractState()
2024-11-27 05:56:58.250   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 05:56:58.250   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 05:56:58.250   [DBG] [23f78f20] TabbedWindowBase.makeStateSnapshot()
2024-11-27 05:56:58.250   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 05:56:58.250   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 05:56:58.250   [DBG] LinkingService.internalExtractState()
2024-11-27 05:56:58.250   [DBG] TrackEventService.setAppWindowsData()
2024-11-27 05:56:58.250   [DBG] FileBasedStorage.store()
2024-11-27 05:58:10.208   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:03:10.209   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:04:37.652   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:40.823   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:41.426   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:42.520   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:44.62    [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:44.937   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:46.420   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:47.870   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:49.113   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:51.955   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:53.46    [DBG] AppEventsService.focusWebContent()
2024-11-27 06:04:55.448   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:05:00.282   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:05:02.334   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:05:06.889   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:05:14.192   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:05:15.407   [DBG] AppEventsService.focusWebContent()
2024-11-27 06:08:10.211   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:13:10.210   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:18:10.211   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:21:01.391   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:21:11.391   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:21:21.392   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:23:10.213   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:28:10.213   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:33:10.214   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 06:36:31.434   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:36:41.432   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:36:51.432   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 06:38:10.214   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:18:26.378   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 13:18:36.110   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:18:36.362   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 13:18:38.449   [DBG] AppEventsService.focusWebContent()
2024-11-27 13:23:37.54    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:28:37.54    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:33:37.53    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:38:37.54    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:43:37.55    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:48:37.56    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:53:37.57    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 13:58:37.58    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 14:03:37.59    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 14:08:37.58    [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:12:42.322   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 17:12:52.321   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 17:16:11.468   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:21:11.469   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:26:11.470   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:31:12.153   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:36:12.154   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:41:12.154   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:46:12.154   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:51:12.155   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 17:56:12.156   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:01:12.156   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:06:12.156   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:11:12.157   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:16:12.157   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:21:12.157   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:26:12.158   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:31:12.159   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:36:12.160   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:41:12.160   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:46:12.160   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:51:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 18:56:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:01:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:06:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:11:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:16:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:21:12.161   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:26:12.162   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:31:12.163   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:36:12.164   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:37:44.966   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:37:49.521   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:37:50.642   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:37:50.644   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:37:51.515   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:37:53.451   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/u/uSs3ewa/#published-charts"
2024-11-27 19:37:54.452   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/u/uSs3ewa/#published-charts)
2024-11-27 19:37:55.725   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 19:37:55.725   [DBG] WindowService.zoom()
2024-11-27 19:37:55.725   [DBG] ZoomController.setZoomValue()
2024-11-27 19:37:55.725   [DBG] WindowService.getChartWindows()
2024-11-27 19:37:55.725   [DBG] MainMenuService.buildAppMenu()
2024-11-27 19:37:55.726   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 19:37:55.726   [DBG] mn.availableThemes()
2024-11-27 19:37:56.104   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.124   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.233   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.244   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.383   [DBG] TabNavigationHandler.handleWillNavigate(): "id: 442dfb0f, url https://www.tradingview.com/chart/"
2024-11-27 19:37:56.473   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.474   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:56.797   [DBG] Tab id: 442dfb0f did-navigate (https://www.tradingview.com/chart/)
2024-11-27 19:37:56.810   [DBG] Tab id: 442dfb0f page-title-updated
2024-11-27 19:37:57.373   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 19:37:57.374   [DBG] WindowService.zoom()
2024-11-27 19:37:57.374   [DBG] ZoomController.setZoomValue()
2024-11-27 19:37:57.374   [DBG] WindowService.getChartWindows()
2024-11-27 19:37:57.374   [DBG] MainMenuService.buildAppMenu()
2024-11-27 19:37:57.376   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 19:37:57.377   [DBG] mn.availableThemes()
2024-11-27 19:37:58.49    [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:58.149   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:58.616   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:58.825   [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:59.15    [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:37:59.74    [DBG] [23f78f20] TabbedWindowBase.findTabByWebContents()
2024-11-27 19:38:28.271   [INF] Invoke key binding [ctrl+Equal]
2024-11-27 19:38:28.271   [DBG] MenuWindow.hide()
2024-11-27 19:38:28.271   [DBG] MainMenuService.hideMenu()
2024-11-27 19:38:28.271   [DBG] MenuWindow.hide()
2024-11-27 19:38:28.271   [DBG] WindowService.zoom()
2024-11-27 19:38:28.271   [DBG] ZoomController.stepZoom()
2024-11-27 19:38:28.271   [DBG] ZoomController.setZoomToView()
2024-11-27 19:38:28.271   [DBG] MainMenuService.buildAppMenu()
2024-11-27 19:38:28.271   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 19:38:28.272   [DBG] ZoomController.showZoom()
2024-11-27 19:38:28.272   [DBG] ZoomController.getToastWindow()
2024-11-27 19:38:28.272   [DBG] mn.availableThemes()
2024-11-27 19:38:28.272   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 19:38:28.272   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 19:38:28.272   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 19:38:28.273   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 19:38:29.771   [INF] Invoke key binding [ctrl+Minus]
2024-11-27 19:38:29.771   [DBG] MenuWindow.hide()
2024-11-27 19:38:29.771   [DBG] MainMenuService.hideMenu()
2024-11-27 19:38:29.771   [DBG] MenuWindow.hide()
2024-11-27 19:38:29.771   [DBG] WindowService.zoom()
2024-11-27 19:38:29.771   [DBG] ZoomController.stepZoom()
2024-11-27 19:38:29.771   [DBG] ZoomController.setZoomToView()
2024-11-27 19:38:29.771   [DBG] MainMenuService.buildAppMenu()
2024-11-27 19:38:29.772   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 19:38:29.772   [DBG] ZoomController.showZoom()
2024-11-27 19:38:29.772   [DBG] ZoomController.getToastWindow()
2024-11-27 19:38:29.772   [DBG] mn.availableThemes()
2024-11-27 19:38:29.772   [DBG] ToastWindow.setToastPosition(coordinates: { x: 715, y: 133 })
2024-11-27 19:38:29.773   [DBG] ToastWindow.setAlwaysOnTop(flag: true, level: pop-up-menu, relativeLevel: 1})
2024-11-27 19:38:29.773   [DBG] ToastWindow.show(wnd: 3)
2024-11-27 19:38:29.774   [DBG] ToastWindow.setToastSizes(dimensions: { width: 136, height: 51)
2024-11-27 19:38:31.778   [DBG] ZoomController.hideZoomPopup()
2024-11-27 19:39:12.491   [DBG] [2c122181] TabPanel.openTab()
2024-11-27 19:39:12.492   [DBG] [23f78f20] TabbedWindowBase.addTab()
2024-11-27 19:39:12.493   [DBG] TabbedWindowBase.findTabById(tabId: 29468106)
2024-11-27 19:39:12.493   [DBG] TabbedWindowBase.findTabById(tabId: 29468106)
2024-11-27 19:39:12.493   [DBG] [29468106] Tab.setupViewEvents()
2024-11-27 19:39:12.493   [INF] Create tab url: '/app/new-tab/index.html', id: '29468106'
2024-11-27 19:39:12.493   [DBG] [29468106] TvTab.setupTvViewEvents()
2024-11-27 19:39:12.493   [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 19:39:12.493   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 19:39:12.493   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 19:39:12.493   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.handleTabLoading()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 19:39:12.494   [DBG] [29468106] Tab.load()
2024-11-27 19:39:12.494   [DBG] TaskQueueImpl.startTask()
2024-11-27 19:39:12.494   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.494   [DBG] [29468106] Tab.setViewData()
2024-11-27 19:39:12.494   [DBG] Tab id: 29468106, loading url: /app/new-tab/index.html
2024-11-27 19:39:12.503   [DBG] mn.applyTheme()
2024-11-27 19:39:12.506   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 19:39:12.509   [DBG] [23f78f20] TabbedWindowBase.registerTabController()
2024-11-27 19:39:12.509   [INF] TabbedWindowBase.registerTabController(tabId: 29468106-2137-41f0-b25e-6236219996a1, from window id: 28d9ddcc-tvd:tab)
2024-11-27 19:39:12.509   [DBG] [28d9ddcc] Tab.setController()
2024-11-27 19:39:12.512   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 19:39:12.512   [DBG] TabComponent.componentDidMount(): "registered controller for tab 28d9ddcc"
2024-11-27 19:39:12.513   [DBG] NativeDragService.registerDraggable()
2024-11-27 19:39:12.513   [DBG] WindowService.findWindowAsync()
2024-11-27 19:39:12.514   [DBG] TabComponent.componentDidMount(): "registered draggable with id 28d9ddcc"
2024-11-27 19:39:12.567   [DBG] Tab id: 29468106 did-navigate (/app/new-tab/index.html)
2024-11-27 19:39:12.783   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.784   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 19:39:12.785   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.785   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:12.826   [DBG] [Renderer] initializeIpcProxyForInstance windowControl id: 23f78f20-tvd:tabbed-window-control; Old id undefined
2024-11-27 19:39:22.768   [DBG] NewTabService.createLayout()
2024-11-27 19:39:25.134   [DBG] Tab id: 29468106 new-window
2024-11-27 19:39:27.583   [DBG] NewTabService.createLayout()
2024-11-27 19:39:31.264   [DBG] [3859e50a] TabComponent.tabClick()
2024-11-27 19:39:31.264   [DBG] [3859e50a] TabComponent.changeActiveTab()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.changeTab()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.setActiveTab()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:31.265   [DBG] [23f78f20] TabbedWindowBase.setActiveTabView()
2024-11-27 19:39:31.266   [DBG] [23f78f20] TabbedWindowBase.setWindowLoading()
2024-11-27 19:39:31.268   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 19:41:12.164   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:42:05.174   [DBG] [28d9ddcc] TabComponent.closeTab()
2024-11-27 19:42:05.195   [DBG] [23f78f20] TabbedWindowBase.closeTab()
2024-11-27 19:42:05.195   [INF] Close tab, id: '29468106', from window id: '23f78f20'
2024-11-27 19:42:05.195   [DBG] [23f78f20] TabbedWindowBase.tabPosition()
2024-11-27 19:42:05.399   [DBG] [28d9ddcc] Tab.dispatchBeforeUnloadEvent()
2024-11-27 19:42:05.404   [DBG] MainMenuService.buildAppMenu()
2024-11-27 19:42:05.405   [DBG] MainMenuService.makeThemesMenu()
2024-11-27 19:42:05.405   [DBG] [28d9ddcc] Tab.dispose()
2024-11-27 19:42:05.405   [DBG] [28d9ddcc] Tab.invalidateController()
2024-11-27 19:42:05.405   [DBG] [23f78f20] TabbedWindowBase.notifyTabsChanged()
2024-11-27 19:42:05.405   [DBG] [23f78f20] TabbedWindowBase.updateTabsContainer()
2024-11-27 19:42:05.405   [DBG] mn.availableThemes()
2024-11-27 19:42:05.406   [DBG] [2c122181] TabPanel.updateTabs()
2024-11-27 19:42:05.407   [DBG] NativeDragService.unregister(): "Will unregister: 28d9ddcc"
2024-11-27 19:42:05.409   [DBG] TabComponent.componentWillUnmount(): "Unmounting 28d9ddcc"
2024-11-27 19:42:05.410   [DBG] Tab id: 29468106 did-navigate (k)
2024-11-27 19:42:05.411   [DBG] Navigate (about:blank) with NON-OK response code: -1
2024-11-27 19:42:05.455   [DBG] LinkingService.unlink()
2024-11-27 19:42:05.998   [DBG] [23f78f20] TabbedWindowBase.notifyInputEvent()
2024-11-27 19:42:05.998   [DBG] [23f78f20] TabbedWindowBase.notifyInputEventFilterForRuLang()
2024-11-27 19:42:12.20    [DBG] AppEventsService.focusWebContent()
2024-11-27 19:42:14.168   [DBG] AppEventsService.focusWebContent()
2024-11-27 19:46:12.164   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:47:05.405   [DBG] PersistenceService.store()
2024-11-27 19:47:05.405   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 19:47:05.405   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 19:47:05.405   [DBG] [23f78f20] TabbedWindowBase.makeStateSnapshot()
2024-11-27 19:47:05.405   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 19:47:05.405   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 19:47:05.405   [DBG] LinkingService.internalExtractState()
2024-11-27 19:47:05.405   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 19:47:05.405   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 19:47:05.405   [DBG] [23f78f20] TabbedWindowBase.makeStateSnapshot()
2024-11-27 19:47:05.405   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 19:47:05.406   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 19:47:05.406   [DBG] LinkingService.internalExtractState()
2024-11-27 19:47:05.406   [DBG] TrackEventService.setAppWindowsData()
2024-11-27 19:47:05.406   [DBG] FileBasedStorage.store()
2024-11-27 19:51:12.164   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 19:56:12.165   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:01:12.165   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:06:12.166   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:11:12.166   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:12:50.478   [DBG] AppEventsService.focusWebContent()
2024-11-27 20:12:51.289   [DBG] AppEventsService.focusWebContent()
2024-11-27 20:16:12.167   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:21:12.167   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:26:12.166   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:31:12.167   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:36:12.168   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:41:12.168   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:46:12.168   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:47:01.894   [DBG] AppEventsService.focusWebContent()
2024-11-27 20:47:08.157   [DBG] AppEventsService.focusWebContent()
2024-11-27 20:51:12.168   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 20:56:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:01:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:06:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:11:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:16:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:21:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:26:12.169   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:31:12.170   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:36:12.170   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:41:12.170   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:46:12.170   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:51:12.171   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 21:56:12.172   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:01:12.173   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:06:12.173   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:11:12.173   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:16:12.173   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:21:12.174   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:26:12.175   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:31:12.176   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:36:12.176   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:41:12.177   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 22:46:12.177   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:03:40.363   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:03:50.363   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:00.365   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:10.365   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:20.367   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:30.368   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:40.369   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:04:50.368   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:00.369   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:10.369   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:20.370   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:30.369   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:40.370   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:05:50.370   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:00.372   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:10.371   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:20.371   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:30.372   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:40.375   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:50.373   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:06:56.318   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:07:00.373   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:07:10.375   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:07:20.375   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:07:30.376   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:07:40.376   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:07:50.375   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:00.376   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:10.377   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:20.377   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:30.378   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:40.378   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:08:50.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:00.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:10.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:20.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:30.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:40.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:09:50.379   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:00.380   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:10.380   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:20.381   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:30.380   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:40.381   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:10:50.383   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:00.382   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:10.383   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:20.384   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:30.385   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:40.386   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:50.386   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:11:56.318   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:12:00.387   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:12:10.386   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:12:20.386   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:12:30.386   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:12:40.388   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:12:50.387   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:00.388   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:10.389   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:20.391   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:30.390   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:40.391   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:13:50.391   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:00.392   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:10.393   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:20.393   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:30.394   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:40.395   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:14:50.395   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:00.396   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:10.396   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:20.396   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:30.395   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:40.397   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:15:50.397   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:00.398   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:10.398   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:20.397   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:30.397   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:40.399   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:50.399   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:16:56.318   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:17:00.400   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:17:10.400   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:17:20.399   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:17:30.400   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:21:56.756   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:26:56.757   [DBG] RemoteInstanceManager.cleanSubscriptions()
2024-11-27 23:27:11.215   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.216   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.217   [DBG] ZoomController.hideZoomPopup()
2024-11-27 23:27:11.221   [DBG] AppEventsService.focusWebContent()
2024-11-27 23:27:12.66    [DBG] AppEventsService.focusWebContent()
2024-11-27 23:27:51.860   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:28:01.861   [WRN] Failed request to https://data.tradingview.com/ping
2024-11-27 23:28:10.241   [DBG] [3859e50a] TabComponent.closeTab()
2024-11-27 23:28:10.263   [DBG] [23f78f20] TabbedWindowBase.closeTab()
2024-11-27 23:28:10.263   [INF] Close tab, id: '442dfb0f', from window id: '23f78f20'
2024-11-27 23:28:10.263   [DBG] [23f78f20] TabbedWindowBase.tabPosition()
2024-11-27 23:28:10.264   [DBG] [23f78f20] BaseWindow.close()
2024-11-27 23:28:10.264   [DBG] [23f78f20] BaseWindow.processClose()
2024-11-27 23:28:10.264   [DBG] WindowService.mayClose()
2024-11-27 23:28:10.264   [DBG] [23f78f20] TabbedWindowBase.willCloseWindow()
2024-11-27 23:28:11.264   [DBG] [23f78f20] TabbedWindowBase.makeStateSnapshot()
2024-11-27 23:28:11.264   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 23:28:11.265   [DBG] [3859e50a] Tab.makeStateSnapshot()
2024-11-27 23:28:11.268   [DBG] [23f78f20] TabbedWindowBase.dispose()
2024-11-27 23:28:11.268   [DBG] [23f78f20] s.notifyListeners()
2024-11-27 23:28:11.268   [DBG] s.notifyListeners()
2024-11-27 23:28:11.268   [DBG] Electron.App (before-quit)
2024-11-27 23:28:11.268   [DBG] AppEventsService.beforeDeferredQuit()
2024-11-27 23:28:11.268   [DBG] WindowService.hasChartUrlWithQueryParamsInSomeWindows()
2024-11-27 23:28:11.268   [DBG] [23f78f20] TabbedWindowBase.hasChartUrlWithQueryParams()
2024-11-27 23:28:11.269   [DBG] WindowService.checkAutoSave()
2024-11-27 23:28:11.269   [DBG] [3859e50a] Tab.dispatchBeforeUnloadEvent()
2024-11-27 23:28:11.272   [DBG] NativeDragService.unregister(): "Will unregister: 2c122181"
2024-11-27 23:28:11.272   [DBG] [23f78f20] TabbedWindowBase.disposeTabs()
2024-11-27 23:28:11.273   [DBG] [3859e50a] Tab.dispose()
2024-11-27 23:28:11.273   [DBG] [3859e50a] Tab.invalidateController()
2024-11-27 23:28:11.274   [DBG] NativeDragService.unregister(): "Will unregister: 3859e50a"
2024-11-27 23:28:11.276   [DBG] TabComponent.componentWillUnmount(): "Unmounting 3859e50a"
2024-11-27 23:28:11.277   [DBG] WindowService.checkAutoSave(): true
2024-11-27 23:28:11.277   [DBG] [23f78f20] BaseWindow.show()
2024-11-27 23:28:11.277   [DBG] PersistenceService.store()
2024-11-27 23:28:11.277   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 23:28:11.277   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 23:28:11.277   [DBG] LinkingService.internalExtractState()
2024-11-27 23:28:11.277   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 23:28:11.277   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 23:28:11.277   [DBG] LinkingService.internalExtractState()
2024-11-27 23:28:11.277   [DBG] TrackEventService.setAppWindowsData()
2024-11-27 23:28:11.277   [DBG] FileBasedStorage.store()
2024-11-27 23:28:11.279   [DBG] WindowService.saveAllChanges()
2024-11-27 23:28:11.279   [DBG] WindowService.checkAutoSave()
2024-11-27 23:28:11.279   [DBG] [3859e50a] Tab.dispatchBeforeUnloadEvent()
2024-11-27 23:28:11.325   [DBG] Tab id: 442dfb0f did-navigate (k)
2024-11-27 23:28:11.325   [DBG] Navigate (about:blank) with NON-OK response code: -1
2024-11-27 23:28:11.338   [DBG] Tab id: 442dfb0f dom-ready
2024-11-27 23:28:11.338   [DBG] LinkingService.unlink()
2024-11-27 23:28:11.339   [DBG] [23f78f20] TabbedWindowBase.dispose()
2024-11-27 23:28:11.339   [DBG] [23f78f20] BaseWindow.dispose()
2024-11-27 23:28:11.345   [DBG] WindowService.checkAutoSave(): false
2024-11-27 23:28:11.346   [DBG] Electron.App (before-quit)
2024-11-27 23:28:11.346   [DBG] AppEventsService.beforeDeferredQuit()
2024-11-27 23:28:11.346   [DBG] WindowService.hasChartUrlWithQueryParamsInSomeWindows()
2024-11-27 23:28:11.346   [DBG] [23f78f20] TabbedWindowBase.hasChartUrlWithQueryParams()
2024-11-27 23:28:11.346   [DBG] WindowService.checkAutoSave()
2024-11-27 23:28:11.346   [DBG] WindowService.checkAutoSave(): false
2024-11-27 23:28:11.346   [DBG] AppEventsService.tryShutdown()
2024-11-27 23:28:11.347   [DBG] WindowService.hasUnsavedChanges()
2024-11-27 23:28:11.347   [DBG] PersistenceService.store()
2024-11-27 23:28:11.347   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 23:28:11.347   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 23:28:11.347   [DBG] LinkingService.internalExtractState()
2024-11-27 23:28:11.348   [DBG] PersistentArrayProxy.internalExtractState()
2024-11-27 23:28:11.348   [DBG] [23f78f20] TabbedWindowBase.internalExtractState()
2024-11-27 23:28:11.348   [DBG] LinkingService.internalExtractState()
2024-11-27 23:28:11.348   [DBG] TrackEventService.setAppWindowsData()
2024-11-27 23:28:11.348   [DBG] FileBasedStorage.store()
2024-11-27 23:28:11.349   [DBG] WindowService.getChartWindows()
2024-11-27 23:28:11.349   [DBG] WindowService.mayClose()
2024-11-27 23:28:11.349   [INF] [AppEventsService.tryShutdown()] App may close
2024-11-27 23:28:11.349   [DBG] WindowService.getChartWindows()
2024-11-27 23:28:11.349   [DBG] TrackEventService.trackCloseApp()
2024-11-27 23:28:11.349   [DBG] WindowService.disposeWindows()
2024-11-27 23:28:11.350   [DBG] WindowService.disposeWindows()
2024-11-27 23:28:11.350   [DBG] [23f78f20] TabbedWindowBase.dispose()
2024-11-27 23:28:11.350   [DBG] WindowService.disposeDefaultWindow()
2024-11-27 23:28:11.351   [DBG] Drag service dispose
